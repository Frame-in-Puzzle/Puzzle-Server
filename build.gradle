plugins {
	id 'org.springframework.boot' version '2.5.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" //querydsl
	id "io.franzbecker.gradle-lombok" version "3.0.0"
}

group = 'com.server'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// *** starter *** //
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // data jpa
	implementation 'org.springframework.boot:spring-boot-starter-security' // security
	implementation 'org.springframework.boot:spring-boot-starter-web' // web
	implementation 'org.springframework.boot:spring-boot-starter-validation' // validation

	// *** lombok *** //
	compile 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// *** h2 *** //
	runtimeOnly 'com.h2database:h2'

	// *** mariadb *** //
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client'

	// *** test ** //
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// *** gson *** //
	implementation 'com.google.code.gson:gson:2.8.5'

	// *** swagger *** //
	implementation 'io.springfox:springfox-swagger2:2.9.2'
	implementation 'io.springfox:springfox-swagger-ui:2.9.2'

	// *** QueryDsl *** //
	implementation 'com.querydsl:querydsl-jpa'

	// *** Oauth2 *** //
	implementation 'org.springframework.boot:spring-boot-configuration-processor:2.6.2'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// *** JsonWebToken *** //
	implementation 'io.jsonwebtoken:jjwt-api:0.11.1'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.1'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.1'

	// *** AWS *** ///
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

}

test {
	useJUnitPlatform()
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
configurations {
	querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}